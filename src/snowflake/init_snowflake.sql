CREATE DATABASE IF NOT EXISTS HUNGTEST_UPTODATE;
CREATE SCHEMA IF NOT EXISTS MANUFACTURING;


USE DATABASE HUNGTEST_UPTODATE;

CREATE OR REPLACE TABLE HUNGTEST_UPTODATE.MANUFACTURING.FACT_INVENTORY
(   ProductId INT,
    TotalQty INT NOT NULL,
    QCPassQty INT NOT NULL,
    InventoryDateKey NVARCHAR(8) NOT NULL);

CREATE OR REPLACE TASK UPDATE_INVENTORY WAREHOUSE=QOOBEE_WH
    SCHEDULE = '1 minute'
  --  ALLOW_OVERLAPPING_EXECUTION = TRUE
    -- WHEN SYSTEM$STREAM_HAS_DATA('TEST')
    AS
    MERGE INTO HUNGTEST_UPTODATE.MANUFACTURING.FACT_INVENTORY AS MI
    USING (Select * From  HUNGTEST.MANUFACTURING.FACT_INVENTORY t4
           WHERE INSERT_TIME = (select max(INSERT_TIME) from HUNGTEST.MANUFACTURING.FACT_INVENTORY WHERE t4.PRODUCTID = HUNGTEST.MANUFACTURING.FACT_INVENTORY.PRODUCTID 
                                                                                                                           AND t4.INVENTORYDATEKEY = HUNGTEST.MANUFACTURING.FACT_INVENTORY.INVENTORYDATEKEY)) AS MI_UPDATE
    ON MI.PRODUCTID = MI_UPDATE.PRODUCTID AND MI.INVENTORYDATEKEY = MI_UPDATE.INVENTORYDATEKEY
    WHEN MATCHED THEN
        UPDATE SET MI.TOTALQTY = MI_UPDATE.TOTALQTY,
                   MI.QCPASSQTY = MI_UPDATE.QCPASSQTY
    WHEN NOT MATCHED THEN
        INSERT ("PRODUCTID" ,"TOTALQTY" ,"QCPASSQTY" ,"INVENTORYDATEKEY") VALUES (MI_UPDATE.PRODUCTID, MI_UPDATE.TOTALQTY, MI_UPDATE.QCPASSQTY, MI_UPDATE.INVENTORYDATEKEY);
ALTER TASK UPDATE_INVENTORY RESUME;

Select *
  from table(information_schema.task_history())  

insert into "HUNGTEST"."MANUFACTURING"."FACT_INVENTORY" ("PrODUCTID" ,"TOTALQTY" ,"QCPASSQTY" ,"INVENTORYDATEKEY") values (2123 ,94 ,86, 20160905)

SELECT * FROM "HuNGTEST_UPTODATE"."MANUFACTURING"."FACT_INVENTORY" AS MI_U
WHERE PRODUCTID = 2123 AND INVENTORYDATEKEY = 20160905
alter warehouse QOOBEE_WH set warehouse_size=Small;
alter warehouse QOOBEE_WH suspend;
alter warehouse QOOBEE_WH set AUTO_RESUME= FALSE;
insert into "FVHIS_DE"."DISEASE_DIAGNOSIS"."DIM_DISEASE" ("DISEASE_ID","DISEASE_NAME", "BLOOD_PRESSURE_MMHG", "BLOOD_SUGAR_MGDL" ) values ('D4', 'Test', '<0', '>0')
DROP TASK UPDATE_INVENTORY

DELETE FROM "FVHIS_DE"."DISEASE_DIAGNOSIS"."DIM_DISEASE" WHERE DISEASE_ID = 'D4' AND DISEASE_NAME = 'Test'